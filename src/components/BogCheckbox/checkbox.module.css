.checkboxContainer {
  display: flex;
  align-items: center;
  gap: 8px;
}

.checkboxContainer.disabled {
  cursor: not-allowed;
}

.checkboxContainer.indeterminate {
  cursor: not-allowed;
}

.checkbox {
  all: unset;
  width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid var(--color-grey-off-state);
  border-radius: 4px;
  background-color: white;
  cursor: pointer;
}

/* hover state for checkboxes that are not disabled */
.checkbox:not(.disabled):not([data-state='indeterminate']):hover {
  border-color: var(--color-brand-stroke-strong);
}

/* this is when the checkbox is clicked */
.checkbox[data-state='checked'] {
  background-color: var(--color-brand-text);
  border-color: var(--color-brand-stroke-strong);
}

/* checkbox is indeterminate and disabled hover, changed cursor*/
.checkbox[data-state='indeterminate'] {
  background-color: var(--color-brand-text);
  border-color: var(--color-brand-stroke-strong);
  cursor: not-allowed;
}

/* when checkbox is disabled, could not find fill-weakest so went with off-state */
.checkbox.disabled {
  background-color: var(--color-grey-fill-weaker);
  border-color: var(--color-grey-off-state);
  cursor: not-allowed;
}

.checkbox.disabled[data-state='checked'] {
  background-color: var(--color-grey-fill-weaker);
  border-color: var(--color-grey-off-state);
}

.checkboxIndicator {
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
}

.checkbox.disabled .checkboxIndicator {
  color: var(--color-grey-off-state);
}

.checkboxIcon {
  width: 18px;
  height: 18px;
}

.checkboxLabel {
  font-size: var(--text-mobile-paragraph-2);
  line-height: var(--text-mobile-paragraph-2--line-height);
  color: var(--color-grey-text-strong);
  user-select: none;
}

.checkboxLabel.disabled {
  font-size: var(--text-mobile-paragraph-2);
  line-height: var(--text-mobile-paragraph-2--line-height);
  color: var(--color-grey-off-state);
  cursor: not-allowed;
}

.checkboxLabel.indeterminate {
  cursor: not-allowed;
}
